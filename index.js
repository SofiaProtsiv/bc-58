"use strict";

/*
 * –ü–µ—Ä–µ–¥–∞—á–∞ –∑–∞ –ø–æ—Å–∏–ª–∞–Ω–Ω—è–º —Ç–∞ –∑–∞ –∑–Ω–∞—á–µ–Ω–Ω—è–º
*/

/*
? –°—Ç–≤–æ—Ä—ñ—Ç—å –∑–º—ñ–Ω–Ω—É a = 10.
? –°—Ç–≤–æ—Ä—ñ—Ç—å —Ç–∞ –ø—Ä–∏–≤–ª–∞—Å–Ω—ñ—Ç—å –∑–º—ñ–Ω–Ω—ñ–π b -> –∑–º—ñ–Ω–Ω—É a
? –í–∏–≤–µ–¥—ñ—Ç—å –≤ –∫–æ–Ω—Å–æ–ª—å –æ–±–∏–¥–≤—ñ —Ü—ñ –∑–º—ñ–Ω–Ω—ñ
? –ó–º—ñ–Ω—ñ—Ç—å –∑–Ω–∞—á–µ–Ω–Ω—è –∑–º—ñ–Ω–Ω–æ—ó a —ñ —â–µ —Ä–∞–∑ –≤–∏–≤–µ–¥—ñ—Ç—å —É –∫–æ–Ω—Å–æ–ª—å
*/
// let a = 10;
// let b = a;
// console.log("a", a);
// console.log("b", b);
// a = 20;
// console.log("======")
// console.log("a", a);
// console.log("b", b);

/*
? –°—Ç–≤–æ—Ä—ñ—Ç—å –º–∞—Å–∏–≤ arr1 = [1, 2, 3].
? –°—Ç–≤–æ—Ä—ñ—Ç—å —Ç–∞ –ø—Ä–∏–≤–ª–∞—Å–Ω—ñ—Ç—å –º–∞—Å–∏–≤—É arr2 -> –º–∞—Å–∏–≤ arr1
? –í–∏–±–∞—á—Ç–µ –≤ –∫–æ–Ω—Å–æ–ª—å –æ–±–∏–¥–≤–∞ —Ü—ñ –º–∞—Å–∏–≤–∏
? –î–æ–¥–∞–π—Ç–µ –µ–ª–µ–º–µ–Ω—Ç –≤ –º–∞—Å–∏–≤ arr1 —ñ —â–µ —Ä–∞–∑ –≤–∏–≤–µ–¥–µ—Ç–µ –æ–±–∏–¥–≤–∞ –º–∞—Å–∏–≤–∏ –≤ –∫–æ–Ω—Å–æ–ª—å
*/
// const arr1 = [1, 2, 3]
// const arr2 = arr1;
// const arr3 = [1, 2, 3]
// console.log("arr1", arr1)
// console.log("arr2", arr2)
// console.log(arr1 === arr2)
// console.log(arr1 === arr3)
// arr1.push(4)
// console.log("======")
// console.log("arr1", arr1)
// console.log("arr2", arr2)

/*
 *  –ú–∞—Å–∏–≤–∏: –ª—ñ—Ç–µ—Ä–∞–ª–∏ –º–∞—Å—Å–∏–≤–∞, –µ–ª–µ–º–µ–Ω—Ç–∏, —ñ–Ω–¥–µ–∫—Å–∞—Ü—ñ—è, –¥–æ–≤–∂–∏–Ω–∞
 *  –ë–∞–∑–æ–≤—ñ –º–µ—Ç–æ–¥–∏: split –∏ join, indexOf –∏ includes, push, slice –∏ splice, concat
 */
// –ú–∞—Å–∏–≤ - —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ –¥–∞–Ω–∏—Ö –¥–ª—è –∑–±–µ—Ä—ñ–≥–∞–Ω–Ω—è —ñ –º–∞–Ω—ñ–ø—É–ª—é–≤–∞–Ω–Ω—è
// –∫–æ–ª–µ–∫—Ü—ñ—î—é —ñ–Ω–¥–µ–∫—Å–æ–≤–∞–Ω–∏—Ö –∑–Ω–∞—á–µ–Ω—å. –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î—Ç—å—Å—è –¥–ª—è –∑–±–µ—Ä—ñ–≥–∞–Ω–Ω—è
// –≤–ø–æ—Ä—è–¥–∫–æ–≤–∞–Ω–∏—Ö –∫–æ–ª–µ–∫—Ü—ñ–π –¥–∞–Ω–∏—Ö, –Ω–∞–ø—Ä–∏–∫–ª–∞–¥, —Å–ø–∏—Å–∫—É –∫—É—Ä–æ—Ä—Ç—ñ–≤, —Ç–æ–≤–∞—Ä—ñ–≤, –∫–ª—ñ—î–Ω—Ç—ñ–≤ –≤ –≥–æ—Ç–µ–ª—ñ —Ç–æ—â–æ.
/*

? –°—Ç–≤–æ—Ä—ñ—Ç—å –º–∞—Å–∏–≤ genres –∑ –µ–ª–µ–º–µ–Ω—Ç–∞–º–∏ Jazz —ñ Blues.
? –î–æ–¥–∞–π—Ç–µ ¬´–†–æ–∫-–Ω-—Ä–æ–ª¬ª –¥–æ –∫—ñ–Ω—Ü—è.
? –í–∏–≤–µ–¥—ñ—Ç—å —É –∫–æ–Ω—Å–æ–ª—å –ø–µ—Ä—à–∏–π –µ–ª–µ–º–µ–Ω—Ç –º–∞—Å–∏–≤—É.
? –í–∏–≤–µ–¥—ñ—Ç—å —É –∫–æ–Ω—Å–æ–ª—å –æ—Å—Ç–∞–Ω–Ω—ñ–π –µ–ª–µ–º–µ–Ω—Ç –º–∞—Å–∏–≤—É. –ö–æ–¥ –º–∞—î –ø—Ä–∞—Ü—é–≤–∞—Ç–∏ –¥–ª—è –º–∞—Å–∏–≤—É –¥–æ–≤—ñ–ª—å–Ω–æ—ó –¥–æ–≤–∂–∏–Ω–∏.
? –í–∏–¥–∞–ª—ñ—Ç—å –ø–µ—Ä—à–∏–π –µ–ª–µ–º–µ–Ω—Ç —Ç–∞ –≤–∏–≤–µ–¥—ñ—Ç—å –π–æ–≥–æ –≤ –∫–æ–Ω—Å–æ–ª—å.
? –í—Å—Ç–∞–≤—Ç–µ ¬´Country¬ª —Ç–∞ ¬´Reggy¬ª –Ω–∞ –ø–æ—á–∞—Ç–æ–∫ –º–∞—Å–∏–≤—É.
 */
const genres = ["Jazz", "Blues"];
const genres2 = ["Country", "Reggy"];

// console.log(Array.prototype)
// console.log(genres)
// console.log(genres[0])
// console.log(genres[genres.length - 1])
// console.log(genres.length);

// genres.shift(); // –ú–£–¢–£–Æ–ß–ò–ô
// genres.pop(); // –ú–£–¢–£–Æ–ß–ò–ô
// genres.unshift("Country", "Reggy") // –ú–£–¢–£–Æ–ß–ò–ô
// genres.push("–†–æ–∫-–Ω-—Ä–æ–ª", "Pop") // –ú–£–¢–£–Æ–ß–ò–ô
// genres.splice(1, 2) // –ú–£–¢–£–Æ–ß–ò–ô (removing)
// genres.splice(1, 2, "Hello") // –ú–£–¢–£–Æ–ß–ò–ô (replace)

const commonGenres = genres.concat(genres2) // –ù–ï–ú–£–¢–£–Æ–ß–ò–ô
const slicesGenres = genres.slice(1); // –ù–ï–ú–£–¢–£–Æ–ß–ò–ô

// 4 –°–ü–û–°–û–ë–ò –ü–û–í–ï–†–•–ù–ï–í–û–á –ö–û–ü–Ü–á –ú–ê–°–ò–í–ê
const copy1 = genres.slice()
const copy2 = genres.concat([])
const copy3 = [...genres]
const copy4 = Array.from(genres);

// const newArr = [genres[0], genres[genres.length - 1]]
// const newArr = [].concat(genres.shift(), genres.pop())
// console.log(newArr)

/*
 * –ü–µ—Ä–µ–±—ñ—Ä –º–∞—Å–∏–≤—É —Ü–∏–∫–ª–∞–º–∏ for –∏ for...of
 */

// –ö–æ–ª–∏ —Ç—Ä–µ–±–∞ —ñ–Ω–¥–µ–∫—Å –µ–ª–µ–º–µ–Ω—Ç–∞
for (let i = 0; i < genres.length; i++) {
    // console.log(genres[i])
}

// –ö–æ–ª–∏ —ñ–Ω–¥–µ–∫—Å –µ–ª–µ–º–µ–Ω—Ç–∞ –Ω–µ–≤–∞–∂–ª–∏–≤–∏–π
for (const genre of genres) {
    // console.log(genre)
}

/*
? –ù–∞–ø–∏—à–∏ —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø–µ—Ä–µ–±–æ—Ä—É –º–∞—Å–∏–≤—É fruits —Ü–∏–∫–ª–æ–º for.
? –î–ª—è –∫–æ–∂–Ω–æ–≥–æ –µ–ª–µ–º–µ–Ω—Ç–∞ –º–∞—Å–∏–≤—É –≤–∏–≤–µ–¥—ñ—Ç—å —É –∫–æ–Ω—Å–æ–ª—å —Ä—è–¥–æ–∫ —É —Ñ–æ—Ä–º–∞—Ç—ñ –Ω–æ–º–µ—Ä_–µ–ª–µ–º–µ–Ω—Ç–∞: –∑–Ω–∞—á–µ–Ω–Ω—è_–µ–ª–µ–º–µ–Ω—Ç–∞.
? –ù—É–º–µ—Ä–∞—Ü—ñ—è –µ–ª–µ–º–µ–Ω—Ç—ñ–≤ –º–∞—î –ø–æ—á–∏–Ω–∞—Ç–∏—Å—è –∑ –æ–¥–∏–Ω–∏—Ü—ñ.
*/

const fruits = ["üçé", "üçá", "üçë", "üçå", "üçã"];

for (let i = 0; i < fruits.length; i++) {
    // console.log(`${i + 1}: ${fruits[i]}`)
}

/*
? –ù–∞–ø–∏—à–∏ —Å–∫—Ä–∏–ø—Ç –ø–æ—à—É–∫—É –Ω–∞–π–º–µ–Ω—à–æ–≥–æ —á–∏—Å–ª–∞ —É –º–∞—Å–∏–≤—ñ.
? –ö–æ–¥ –º–∞—î –ø—Ä–∞—Ü—é–≤–∞—Ç–∏ –¥–ª—è –±—É–¥—å-—è–∫–æ–≥–æ –º–∞—Å–∏–≤—É —á–∏—Å–µ–ª.
? –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π—Ç–µ —Ü–∏–∫–ª –¥–ª—è –≤–∏—Ä—ñ—à–µ–Ω–Ω—è –∑–∞–¥–∞—á—ñ.
*/

const numbers = [2, 17, 94, -20, -50, 0, 23, 1, 37];
// variant 1
// let smallestNum = 0;
// for (const number of numbers) {
//     if (number < smallestNum) {
//         smallestNum = number
//     }
// }

// variant 2
// let smallestNum = numbers[0];
// for (const number of numbers) {
//     if (number < smallestNum) {
//         smallestNum = number
//     }
// }

// variant 3
// let smallestNum = numbers[0];
// for (let i = 1; i < numbers.length; i++) {
//     if (numbers[i] < 0) continue;

//     if (numbers[i] < smallestNum) {
//         smallestNum = numbers[i]
//     }
// }
// console.log(smallestNum)

// variant 4
// let smallestNum = numbers[0];
// for (let i = 1; i < numbers.length; i++) {
//     if (numbers[i] < smallestNum && numbers[i] > 0) {
//         smallestNum = numbers[i]
//     }
// }
// console.log(smallestNum)

// variant 5
// const minNum = Math.min(...numbers)
// console.log(minNum)

/*
? –£ –Ω–∞—Å —î –º–∞—Å–∏–≤ —ñ–∑ –∑–∞—Ä–ø–ª–∞—Ç–∞–º–∏ –ø—Ä–∞—Ü—ñ–≤–Ω–∏–∫—ñ–≤, –ø–æ—Ç—Ä—ñ–±–Ω–æ –ø–æ—Ä–∞—Ö—É–≤–∞—Ç–∏ –∑–∞–≥–∞–ª—å–Ω—É —Å—É–º—É –∑–∞—Ä–ø–ª–∞—Ç
*/

const salaries = [200, 450, 600, 150, 300];

let sumOfAllSalaries = 0;

for (const salary of salaries) {
    sumOfAllSalaries += salary;
}

// console.log(sumOfAllSalaries)

/*
? –£ –Ω–∞—Å —î –∫—ñ–ª—å–∫–∞ –º–∞—Å–∏–≤—ñ–≤ —ñ–∑ –∑–∞—Ä–ø–ª–∞—Ç–∞–º–∏ —Å–ø—ñ–≤—Ä–æ–±—ñ—Ç–Ω–∏–∫—ñ–≤ –∑
? —Ä—ñ–∑–Ω–∏—Ö –≤—ñ–¥–¥—ñ–ª—ñ–≤, –ø–æ—Ç—Ä—ñ–±–Ω–æ –ø–æ—Ä–∞—Ö—É–≤–∞—Ç–∏ –∑–∞–≥–∞–ª—å–Ω—É —Å—É–º—É –∑–∞—Ä–ø–ª–∞—Ç
*/

const managerSalaries = [1000, 1500, 2500, 4000, 5000];
const developersSalaries = [8000, 15000, 40000];

// const allSalaries
//     managerSalaries.concat(developersSalaries);
const allSalaries = [...managerSalaries, ...developersSalaries]

let sum = 0;

for (const salary of allSalaries) {
    sum += salary
}

// console.log(sum)


/*
? –ù–∞–ø–∏—à–∏ —Å–∫—Ä–∏–ø—Ç –ø–æ—à—É–∫—É –Ω–∞–π–¥–æ–≤—à–æ–≥–æ —Å–ª–æ–≤–∞ —É —Ä–µ—á–µ–Ω–Ω—ñ.
? –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π—Ç–µ —Ü–∏–∫–ª –¥–ª—è –≤–∏—Ä—ñ—à–µ–Ω–Ω—è –∑–∞–¥–∞—á—ñ.
*/
const sentance = "An array we can store multiple values at once".split(" ") // multiple

let theLongestWord = sentance[0]

for (let i = 1; i < sentance.length; i++) {
    if (theLongestWord.length < sentance[i].length) {
        theLongestWord = sentance[i]
    }
}

// console.log(theLongestWord)

/*
? –ù–∞–ø–∏—à–∏ —Å–∫—Ä–∏–ø—Ç, —è–∫–∏–π –≤–∏–≤–æ–¥–∏—Ç—å —É –∫–æ–Ω—Å–æ–ª—å —ñ–º'—è —Ç–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–Ω–∏–π –Ω–æ–º–µ—Ä –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞.
? –£ –∑–º—ñ–Ω–Ω–∏—Ö names —ñ phones –∑–±–µ—Ä—ñ–≥–∞—é—Ç—å—Å—è —Ä—è–¥–∫–∏ —ñ–º–µ–Ω —Ç–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–Ω–∏—Ö –Ω–æ–º–µ—Ä—ñ–≤, —Ä–æ–∑–¥—ñ–ª–µ–Ω—ñ –∫–æ–º–∞–º–∏.
? –ü–æ—Ä—è–¥–∫–æ–≤–∏–π –Ω–æ–º–µ—Ä —ñ–º–µ–Ω —Ç–∞ —Ç–µ–ª–µ—Ñ–æ–Ω—ñ–≤ —É —Ä—è–¥–∫–∞—Ö –≤–∫–∞–∑—É—é—Ç—å –Ω–∞ –≤—ñ–¥–ø–æ–≤—ñ–¥–Ω—ñ—Å—Ç—å.
? –ö—ñ–ª—å–∫—ñ—Å—Ç—å —ñ–º–µ–Ω —Ç–∞ —Ç–µ–ª–µ—Ñ–æ–Ω—ñ–≤ –≥–∞—Ä–∞–Ω—Ç–æ–≤–∞–Ω–æ –æ–¥–Ω–∞–∫–æ–≤–∞.
*/

const names = "Jacob, William, Solomon, Artemis".split(", ");
const phones = "89001234567, 890055566377, 890055566377, 890055566377".split(", ");

for (let i = 0; i < names.length; i++) {
    // console.log(`${names[i]}: ${phones[i]}`)
}


/*
–ù–∞–ø–∏—à—ñ—Ç—å —Å–∫—Ä–∏–ø—Ç, —è–∫–∞ –ø–µ—Ä–µ–≤—ñ—Ä—è—î –µ–∫–∑–∞–º–µ–Ω —É —Å—Ç—É–¥–µ–Ω—Ç—ñ–≤. –ü–µ—Ä—à–∏–π –≤—Ö—ñ–¥–Ω–∏–π –º–∞—Å–∏–≤ –º—ñ—Å—Ç–∏—Ç—å –ø—Ä–∞–≤–∏–ª—å–Ω—ñ –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ –Ω–∞ —ñ—Å–ø–∏—Ç—ñ, –Ω–∞–ø—Ä–∏–∫–ª–∞–¥, ["a", "a", "b", "d"]. –î—Ä—É–≥–∏–π –º–∞—Å–∏–≤ –Ω–∞–∑–∏–≤–∞—î—Ç—å—Å—è "answers" —ñ –º—ñ—Å—Ç–∏—Ç—å –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ —Å—Ç—É–¥–µ–Ω—Ç–∞. –û–±–∏–¥–≤–∞ –º–∞—Å–∏–≤–∏ –Ω–µ –ø–æ—Ä–æ–∂–Ω—ñ —ñ –º–∞—é—Ç—å –æ–¥–Ω–∞–∫–æ–≤—É –¥–æ–≤–∂–∏–Ω—É. –ü–æ–≤–µ—Ä–Ω—ñ—Ç—å –æ—Ü—ñ–Ω–∫—É –¥–ª—è —Ü—å–æ–≥–æ –º–∞—Å–∏–≤—É –≤—ñ–¥–ø–æ–≤—ñ–¥–µ–π, –≤–∏–≤–æ–¥—è—á–∏ +4 –∑–∞ –∫–æ–∂–Ω—É –ø—Ä–∞–≤–∏–ª—å–Ω—É –≤—ñ–¥–ø–æ–≤—ñ–¥—å, -1 –∑–∞ –∫–æ–∂–Ω—É –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—É –≤—ñ–¥–ø–æ–≤—ñ–¥—å —ñ +0 –∑–∞ –∫–æ–∂–Ω—É –ø—Ä–æ–ø—É—â–µ–Ω—É –≤—ñ–¥–ø–æ–≤—ñ–¥—å (–ø–æ—Ä–æ–∂–Ω—ñ–π —Ä—è–¥–æ–∫). –Ø–∫—â–æ –æ—Ü—ñ–Ω–∫–∞ < 0, –≤–∏–≤–µ–¥—ñ—Ç—å 0.
*/

// const answers = ["a", "a", "b", "b"];
// const responses = ["a", "c", "b", "d"]

const answers = ["a", "a", "c", "b"];
const responses = ["a", "a", "b", ""];

let result = 0 // ‚Üí 7

// for (let i = 0; i < answers.length; i++) {
//     if (!responses[i]) continue;

//     if (answers[i] === responses[i]) {
//         result += 4
//         continue;
//     }

//     if (answers[i] !== responses[i]) {
//         result -= 1
//     }
// }

// for (let i = 0; i < answers.length; i++) {
//     if (!responses[i]) continue;

//     switch (answers[i]) {
//         case responses[i]:
//             result += 4;
//             break;
//         default:
//             result -= 1;
//             break;
//     }
// }

// console.log(result)

/*
 –ù–∞–ø–∏—à—ñ—Ç—å —Å–∫—Ä–∏–ø—Ç, —è–∫–∏–π –æ—á–∏—â–∞—î –º–∞—Å–∏–≤ –≤—ñ–¥ –Ω–µ–±–∞–∂–∞–Ω–∏—Ö –∑–Ω–∞—á–µ–Ω—å, —Ç–∞–∫–∏—Ö —è–∫ false undefined, –ø—É—Å—Ç—ñ —Ä—è–¥–∫–∏, –Ω—É–ª—å, null.
*/
const arr = [0, 1, false, 2, [], undefined, '', 3, "sofia", null];

const updatedArr = [];

for (const item of arr) {
    if (item) updatedArr.push(item);
}

// console.log(updatedArr)

// if (!email) console.log("enter email")
// if (!isLogin) console.log("login please")
// if (![].length) console.log("no matches")

/*
? –ù–∞–ø–∏—à—ñ—Ç—å –∫–æ–¥, —è–∫–∏–π –ø–æ–≤–µ—Ä–Ω–µ —Å—É–º—É —Ä—è–¥–∫–∞
*/
const numbersArr = String(56349).split("");
let digitSum = 0;
for (const number of numbersArr) {
    digitSum += Number(number)
}
console.log(digitSum)

// console.log([...number]) // –∫–æ–ª–∏ —Ç—Ä–µ–±–∞ —Ä–æ–∑–±–∏—Ç–∏ –ø–æ—Å–∏–º–≤–æ–ª—å–Ω–æ
// console.log(number.split("")) // –∫–æ–ª–∏ —Ç—Ä–µ–±–∞ —Ä–æ–∑–±–∏—Ç–∏ –ø–æ—Å–∏–º–≤–æ–ª—å–Ω–æ
// console.log([...number]) // –∫–æ–ª–∏ —Ç—Ä–µ–±–∞ —Ä–æ–∑–±–∏—Ç–∏ –ø–æ –ø—Ä–æ–±—ñ–ª—É –∞–±–æ –ø–æ —ñ–Ω—à–æ–º—É —Å–µ–ø–∞—Ä–∞—Ç–æ—Ä—É —Ç–∞–∫–∏–π —Å–ø–æ—Å—ñ–± –ù–ï –ü–Ü–î–Ü–ô–î–ï
