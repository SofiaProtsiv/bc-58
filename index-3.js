/*
 * forEach() —è–∫ –∑–∞–º—ñ–Ω–∞ —Ü–∏–∫–ª—ñ–≤ for —ñ for...of –¥–ª—è –º–∞—Å–∏–≤—ñ–≤
 */

// –ø–µ—Ä–µ–±–∏—Ä–∞—é—á–∏–π –º–µ—Ç–æ–¥ –º–∞—Å–∏–≤—É
// –π–æ–≥–æ –Ω–µ –º–æ–∂–ª–∏–≤–æ –∑—É–ø–∏–Ω–∏—Ç–∏, –ø–µ—Ä–µ–±–∏—Ä—ñ—î –¥–æ–∫—ñ–Ω—Ü—è
// –≤—ñ–Ω –Ω—ñ—á–æ–≥–æ –Ω–µ –ø–æ–≤–µ—Ä—Ç–∞—î
// –º–∞—î –¥–æ—Å—Ç—É–ø –¥–æ —ñ–Ω—Ç–µ–∫—Å—ñ–≤ –µ–ª–∫–º–µ–Ω—Ç—ñ–≤
// –ø–æ—Ä–µ–±–∏—Ä–∞—î –∫–æ–∂–µ–Ω –µ–ª–µ–º–µ–Ω—Ç, –±–µ–∑ –º–æ–∂–ª–∏–≤—Å—Ç—ñ –∑–±—ñ–ª—å—à—É–≤–∞—Ç–∏ –∫—Ä–æ–∫/—ñ–Ω—Ç–µ—Ä–≤–∞–ª

// const numbers = [1, 2, 3, 4, 5];

// forEach –ø—ñ–¥ –∫–∞–ø–æ—Ç–æ–º
const ownForEach = function (arr, callback) {
    for (let index = 0; index < arr.length; index++) {
        callback(arr[index], index);
    }
};

const numbers = [1, 2, 3, 4, 5];

// ownForEach(numbers, (number, index) => console.log(number, index))

// console.log(numbers)
numbers.forEach((number, index, arr) => {
    if (index === 3) {
        arr.splice(index, 1, "hello");
        return
    }
});

// console.log(numbers)

/*
? –í–∏–∫–æ–Ω–∞–π—Ç–µ —Ä–µ—Ñ–∞–∫—Ç–æ—Ä–∏–Ω–≥ –∫–æ–¥—É, –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—é—á–∏ –º–µ—Ç–æ–¥ forEach —ñ —Å—Ç—Ä—ñ–ª–æ—á–Ω—ñ —Ñ—É–Ω–∫—Ü—ñ—ó.
*/

function logItems(items) {
    // for (let i = 0; i < items.length; i += 1) {
    //     console.log(`${i + 1} - ${items[i]}`);
    // }

    items.forEach((name, index) => console.log(`${index + 1} - ${name}`));
}

// logItems(['Mango', 'Poly', 'Ajax']);
// logItems(['üçé', 'üçá', 'üçë', 'üçå', 'üçã']);

/*
? –í–∏–∫–æ–Ω–∞–π—Ç–µ —Ä–µ—Ñ–∞–∫—Ç–æ—Ä–∏–Ω–≥ –∫–æ–¥—É, –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—é—á–∏ –º–µ—Ç–æ–¥ forEach —ñ —Å—Ç—Ä—ñ–ª–æ—á–Ω—ñ —Ñ—É–Ω–∫—Ü—ñ—ó.
*/

function printContactsInfo({ names, phones } = {}) {
    const nameList = names.split(",");
    const phoneList = phones.split(",");

    // for (let i = 0; i < phoneList.length; i += 1) {
    //     console.log(i);
    //     console.log(`${nameList[i]}: ${phoneList[i]}`);
    // }

    nameList.forEach((name, index) =>
        console.log(`${name}: ${phoneList[index]}`)
    );
}

printContactsInfo({
    names: "Jacob,William,Solomon,Artemis",
    phones: "89001234567,89001112233,890055566377,890055566300",
});

/*
? –í–∏–∫–æ–Ω–∞–π—Ç–µ —Ä–µ—Ñ–∞–∫—Ç–æ—Ä–∏–Ω–≥ –∫–æ–¥—É, –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—é—á–∏ –º–µ—Ç–æ–¥ forEach —ñ —Å—Ç—Ä—ñ–ª–æ—á–Ω—ñ —Ñ—É–Ω–∫—Ü—ñ—ó.
*/

function cal—ÅulateAverage(...args) {
    let total = 0;

    // for (let i = 0; i < args.length; i++) {
    //   total += args[i];
    // }

    args.forEach((value) => (total += value));

    return total / args.length;
}

console.log(cal—ÅulateAverage(1, 2, 3, 4)); // 2.5
console.log(cal—ÅulateAverage(14, 8, 2)); // 8
console.log(cal—ÅulateAverage(27, 43, 2, 8, 36)); // 23.2

/*
? –ù–∞–ø–∏—à—ñ—Ç—å —Ñ—É–Ω–∫—Ü—ñ—é groupBy(), —è–∫–∞ –≥—Ä—É–ø—É—î –µ–ª–µ–º–µ–Ω—Ç–∏ –∑ –º–∞—Å–∏–≤—É –∑–∞ –∑–Ω–∞—á–µ–Ω–Ω—è–º, —â–æ –ø–æ–≤–µ—Ä—Ç–∞—î—Ç—å—Å—è –∑–≤–æ—Ä–æ—Ç–Ω–∏–º –≤–∏–∫–ª–∏–∫–æ–º, –∫–æ–ª–∏ –µ–ª–µ–º–µ–Ω—Ç —ñ–∑ –º–∞—Å–∏–≤—É –ø–µ—Ä–µ–¥–∞—î—Ç—å—Å—è —è–∫ –∞—Ä–≥—É–º–µ–Ω—Ç.
*/
const users = [
    {
        name: "John",
        yearOfBirth: 1988,
        placeOfBirth: "New York",
    },
    {
        name: "Nancy",
        yearOfBirth: 1963,
        placeOfBirth: "New York",
    },
    {
        name: "John",
        yearOfBirth: 1980,
        placeOfBirth: "Toronto",
    },
];

function groupBy(users, callback) {
    const newObj = {};

    users.forEach((user) => {
        const placeOfBirth = callback(user);

        if (newObj[placeOfBirth]) {
            newObj[placeOfBirth].push(user);
        } else {
            newObj[placeOfBirth] = [user];
        }
    });

    return newObj;
}

// console.log(groupBy(users, (objectEl) => objectEl.placeOfBirth));

const num = [1, 3, 3, 3, 4, 1, 5, 5];

const obj = {};

num.forEach((el) => {
    !obj[el] ? (obj[el] = 1) : (obj[el] += 1);
});

console.log(obj);

//–û—á—ñ–∫—É–≤–∞–Ω–∏–π —Ä–µ–∑—É–ª—å–∞—Ç:
// {
//   ‚ùóÔ∏èNew York: [
//     {
//       name: 'John',
//       yearOfBirth: 1988,
//       placeOfBirth: 'New York',
//     },
//     {
//       name: 'Nancy',
//       yearOfBirth: 1963,
//       placeOfBirth: 'New York',
//     }
//   ],
//   ‚ùóÔ∏èToronto: [
//     {
//       name: 'John',
//       yearOfBirth: 1980,
//       placeOfBirth: 'Toronto',
//     }
//   ]
// }
